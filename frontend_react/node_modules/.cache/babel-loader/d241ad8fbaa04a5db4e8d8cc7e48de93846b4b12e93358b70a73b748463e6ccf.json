{"ast":null,"code":"var _jsxFileName = \"E:\\\\RESUME_PROJECTS\\\\multilingual_translator_app\\\\frontend_react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport init, { LanguageDetectorBuilder } from \"@bluzzi/lingua\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport TextField from \"@mui/material/TextField\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst languages = [{\n  code: \"ar\",\n  name: \"العربية (Arabic)\"\n}, {\n  code: \"zh\",\n  name: \"中文 (Chinese)\"\n}, {\n  code: \"cs\",\n  name: \"Čeština (Czech)\"\n}, {\n  code: \"nl\",\n  name: \"Nederlands (Dutch)\"\n}, {\n  code: \"en\",\n  name: \"English (English)\"\n}, {\n  code: \"fi\",\n  name: \"Suomi (Finnish)\"\n}, {\n  code: \"fr\",\n  name: \"Français (French)\"\n}, {\n  code: \"de\",\n  name: \"Deutsch (German)\"\n}, {\n  code: \"he\",\n  name: \"עברית (Hebrew)\"\n}, {\n  code: \"hi\",\n  name: \"हिन्दी (Hindi)\"\n}, {\n  code: \"it\",\n  name: \"Italiano (Italian)\"\n}, {\n  code: \"ja\",\n  name: \"日本語 (Japanese)\"\n}, {\n  code: \"ko\",\n  name: \"한국어 (Korean)\"\n}, {\n  code: \"fa\",\n  name: \"فارسی (Persian)\"\n}, {\n  code: \"pl\",\n  name: \"Polski (Polish)\"\n}, {\n  code: \"pt\",\n  name: \"Português (Portuguese)\"\n}, {\n  code: \"ro\",\n  name: \"Română (Romanian)\"\n}, {\n  code: \"ru\",\n  name: \"Русский (Russian)\"\n}, {\n  code: \"sv\",\n  name: \"Svenska (Swedish)\"\n}, {\n  code: \"ta\",\n  name: \"தமிழ் (Tamil)\"\n}, {\n  code: \"tr\",\n  name: \"Türkçe (Turkish)\"\n}, {\n  code: \"uk\",\n  name: \"Українська (Ukrainian)\"\n}, {\n  code: \"vi\",\n  name: \"Tiếng Việt (Vietnamese)\"\n}, {\n  code: \"es\",\n  name: \"Español (Spanish)\"\n}];\nconst languageIcons = {\n  en: \"🇬🇧\",\n  hi: \"🇮🇳\",\n  fr: \"🇫🇷\",\n  es: \"🇪🇸\",\n  de: \"🇩🇪\",\n  ta: \"🇮🇳\",\n  zh: \"🇨🇳\",\n  ar: \"🇸🇦\",\n  ru: \"🇷🇺\",\n  ja: \"🇯🇵\",\n  it: \"🇮🇹\",\n  pt: \"🇵🇹\",\n  pl: \"🇵🇱\",\n  tr: \"🇹🇷\",\n  nl: \"🇳🇱\",\n  sv: \"🇸🇪\",\n  ko: \"🇰🇷\",\n  fa: \"🇮🇷\",\n  fi: \"🇫🇮\",\n  he: \"🇮🇱\",\n  uk: \"🇺🇦\",\n  vi: \"🇻🇳\",\n  cs: \"🇨🇿\",\n  ro: \"🇷🇴\"\n};\nfunction App() {\n  _s();\n  var _languages$find;\n  const [text, setText] = useState(\"\");\n  const [targetLangs, setTargetLangs] = useState([]);\n  const [translations, setTranslations] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [detectedLang, setDetectedLang] = useState(\"\");\n  const [detector, setDetector] = useState(null);\n\n  // Load Lingua WASM\n  useEffect(() => {\n    (async () => {\n      await init();\n      const detectorInstance = LanguageDetectorBuilder.fromAllLanguages().withPreloadedDetectableLanguages().build();\n      setDetector(detectorInstance);\n    })();\n  }, []);\n  const handleTextChange = e => {\n    const input = e.target.value;\n    setText(input);\n    if (detector && input.length > 2) {\n      const best = detector.computeLanguageConfidenceValues(input).sort((a, b) => b.confidence - a.confidence)[0];\n      if (best && best.language) {\n        const iso = best.language.toLowerCase();\n        setDetectedLang(iso);\n      } else {\n        setDetectedLang(\"\");\n      }\n    }\n  };\n  const handleCheckboxChange = e => {\n    const value = e.target.value;\n    if (e.target.checked) {\n      if (targetLangs.length < 5) {\n        setTargetLangs([...targetLangs, value]);\n      } else {\n        toast.warning(\"You can select up to 5 languages only.\");\n        e.target.checked = false;\n      }\n    } else {\n      setTargetLangs(targetLangs.filter(lang => lang !== value));\n    }\n  };\n  const handleTranslate = async () => {\n    if (!text || targetLangs.length === 0) return;\n    setLoading(true);\n    try {\n      const response = await axios.post(\"http://localhost:8000/translate\", {\n        text,\n        target_langs: targetLangs,\n        source_lang: detectedLang || \"en\"\n      });\n      setTranslations(response.data.translations || {});\n    } catch (error) {\n      toast.error(\"Translation failed.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCopy = text => {\n    navigator.clipboard.writeText(text);\n    toast.success(\"Copied to clipboard!\");\n  };\n  const handleSpeak = (text, langCode) => {\n    const utterance = new SpeechSynthesisUtterance(text);\n    utterance.lang = langCode;\n    window.speechSynthesis.speak(utterance);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83C\\uDF10 Multi-Language Translator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: detector ? \"Enter text...\" : \"Loading language detector...\",\n      multiline: true,\n      rows: 4,\n      fullWidth: true,\n      variant: \"outlined\",\n      value: text,\n      onChange: handleTextChange,\n      disabled: !detector\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), detectedLang && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detected\",\n      children: [\"\\uD83D\\uDD0D Detected Language: \", ((_languages$find = languages.find(l => l.code === detectedLang)) === null || _languages$find === void 0 ? void 0 : _languages$find.name) || \"Unknown\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkbox-list\",\n      children: languages.map(lang => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: lang.code,\n          onChange: handleCheckboxChange,\n          checked: targetLangs.includes(lang.code)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), languageIcons[lang.code], \" \", lang.name]\n      }, lang.code, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTranslate,\n      disabled: loading,\n      children: loading ? \"Translating...\" : \"Translate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: Object.entries(translations).map(([lang, result]) => {\n        var _languages$find2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [languageIcons[lang], \" \", (_languages$find2 = languages.find(l => l.code === lang)) === null || _languages$find2 === void 0 ? void 0 : _languages$find2.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: result\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleCopy(result),\n              children: \"\\uD83D\\uDCCB Copy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSpeak(result, lang),\n              children: \"\\uD83D\\uDD0A Read\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, lang, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"bottom-right\",\n      autoClose: 3000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MKFMpYwWB3jLJhhuuZKwHJKBHNc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","init","LanguageDetectorBuilder","ToastContainer","toast","TextField","jsxDEV","_jsxDEV","languages","code","name","languageIcons","en","hi","fr","es","de","ta","zh","ar","ru","ja","it","pt","pl","tr","nl","sv","ko","fa","fi","he","uk","vi","cs","ro","App","_s","_languages$find","text","setText","targetLangs","setTargetLangs","translations","setTranslations","loading","setLoading","detectedLang","setDetectedLang","detector","setDetector","detectorInstance","fromAllLanguages","withPreloadedDetectableLanguages","build","handleTextChange","e","input","target","value","length","best","computeLanguageConfidenceValues","sort","a","b","confidence","language","iso","toLowerCase","handleCheckboxChange","checked","warning","filter","lang","handleTranslate","response","post","target_langs","source_lang","data","error","handleCopy","navigator","clipboard","writeText","success","handleSpeak","langCode","utterance","SpeechSynthesisUtterance","window","speechSynthesis","speak","className","children","fileName","_jsxFileName","lineNumber","columnNumber","label","multiline","rows","fullWidth","variant","onChange","disabled","find","l","map","type","includes","onClick","Object","entries","result","_languages$find2","position","autoClose","_c","$RefreshReg$"],"sources":["E:/RESUME_PROJECTS/multilingual_translator_app/frontend_react/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport init, { LanguageDetectorBuilder } from \"@bluzzi/lingua\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport TextField from \"@mui/material/TextField\";\nimport \"./App.css\";\n\nconst languages = [\n  { code: \"ar\", name: \"العربية (Arabic)\" },\n  { code: \"zh\", name: \"中文 (Chinese)\" },\n  { code: \"cs\", name: \"Čeština (Czech)\" },\n  { code: \"nl\", name: \"Nederlands (Dutch)\" },\n  { code: \"en\", name: \"English (English)\" },\n  { code: \"fi\", name: \"Suomi (Finnish)\" },\n  { code: \"fr\", name: \"Français (French)\" },\n  { code: \"de\", name: \"Deutsch (German)\" },\n  { code: \"he\", name: \"עברית (Hebrew)\" },\n  { code: \"hi\", name: \"हिन्दी (Hindi)\" },\n  { code: \"it\", name: \"Italiano (Italian)\" },\n  { code: \"ja\", name: \"日本語 (Japanese)\" },\n  { code: \"ko\", name: \"한국어 (Korean)\" },\n  { code: \"fa\", name: \"فارسی (Persian)\" },\n  { code: \"pl\", name: \"Polski (Polish)\" },\n  { code: \"pt\", name: \"Português (Portuguese)\" },\n  { code: \"ro\", name: \"Română (Romanian)\" },\n  { code: \"ru\", name: \"Русский (Russian)\" },\n  { code: \"sv\", name: \"Svenska (Swedish)\" },\n  { code: \"ta\", name: \"தமிழ் (Tamil)\" },\n  { code: \"tr\", name: \"Türkçe (Turkish)\" },\n  { code: \"uk\", name: \"Українська (Ukrainian)\" },\n  { code: \"vi\", name: \"Tiếng Việt (Vietnamese)\" },\n  { code: \"es\", name: \"Español (Spanish)\" }\n];\n\nconst languageIcons = {\n  en: \"🇬🇧\", hi: \"🇮🇳\", fr: \"🇫🇷\", es: \"🇪🇸\", de: \"🇩🇪\", ta: \"🇮🇳\", zh: \"🇨🇳\", ar: \"🇸🇦\",\n  ru: \"🇷🇺\", ja: \"🇯🇵\", it: \"🇮🇹\", pt: \"🇵🇹\", pl: \"🇵🇱\", tr: \"🇹🇷\", nl: \"🇳🇱\", sv: \"🇸🇪\",\n  ko: \"🇰🇷\", fa: \"🇮🇷\", fi: \"🇫🇮\", he: \"🇮🇱\", uk: \"🇺🇦\", vi: \"🇻🇳\", cs: \"🇨🇿\", ro: \"🇷🇴\"\n};\n\nfunction App() {\n  const [text, setText] = useState(\"\");\n  const [targetLangs, setTargetLangs] = useState([]);\n  const [translations, setTranslations] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [detectedLang, setDetectedLang] = useState(\"\");\n  const [detector, setDetector] = useState(null);\n\n  // Load Lingua WASM\n  useEffect(() => {\n    (async () => {\n      await init();\n      const detectorInstance = LanguageDetectorBuilder\n        .fromAllLanguages()\n        .withPreloadedDetectableLanguages()\n        .build();\n      setDetector(detectorInstance);\n    })();\n  }, []);\n\n  const handleTextChange = (e) => {\n    const input = e.target.value;\n    setText(input);\n\n    if (detector && input.length > 2) {\n      const best = detector.computeLanguageConfidenceValues(input)\n        .sort((a, b) => b.confidence - a.confidence)[0];\n\n      if (best && best.language) {\n        const iso = best.language.toLowerCase();\n        setDetectedLang(iso);\n      } else {\n        setDetectedLang(\"\");\n      }\n    }\n  };\n\n  const handleCheckboxChange = (e) => {\n    const value = e.target.value;\n    if (e.target.checked) {\n      if (targetLangs.length < 5) {\n        setTargetLangs([...targetLangs, value]);\n      } else {\n        toast.warning(\"You can select up to 5 languages only.\");\n        e.target.checked = false;\n      }\n    } else {\n      setTargetLangs(targetLangs.filter((lang) => lang !== value));\n    }\n  };\n\n  const handleTranslate = async () => {\n    if (!text || targetLangs.length === 0) return;\n    setLoading(true);\n    try {\n      const response = await axios.post(\"http://localhost:8000/translate\", {\n        text,\n        target_langs: targetLangs,\n        source_lang: detectedLang || \"en\"\n      });\n      setTranslations(response.data.translations || {});\n    } catch (error) {\n      toast.error(\"Translation failed.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCopy = (text) => {\n    navigator.clipboard.writeText(text);\n    toast.success(\"Copied to clipboard!\");\n  };\n\n  const handleSpeak = (text, langCode) => {\n    const utterance = new SpeechSynthesisUtterance(text);\n    utterance.lang = langCode;\n    window.speechSynthesis.speak(utterance);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>🌐 Multi-Language Translator</h1>\n\n      <TextField\n        label={detector ? \"Enter text...\" : \"Loading language detector...\"}\n        multiline\n        rows={4}\n        fullWidth\n        variant=\"outlined\"\n        value={text}\n        onChange={handleTextChange}\n        disabled={!detector}\n      />\n\n      {detectedLang && (\n        <div className=\"detected\">\n          🔍 Detected Language: {languages.find(l => l.code === detectedLang)?.name || \"Unknown\"}\n        </div>\n      )}\n\n      <div className=\"checkbox-list\">\n        {languages.map((lang) => (\n          <label key={lang.code}>\n            <input\n              type=\"checkbox\"\n              value={lang.code}\n              onChange={handleCheckboxChange}\n              checked={targetLangs.includes(lang.code)}\n            />\n            {languageIcons[lang.code]} {lang.name}\n          </label>\n        ))}\n      </div>\n\n      <button onClick={handleTranslate} disabled={loading}>\n        {loading ? \"Translating...\" : \"Translate\"}\n      </button>\n\n      <div className=\"results\">\n        {Object.entries(translations).map(([lang, result]) => (\n          <div className=\"card\" key={lang}>\n            <h3>{languageIcons[lang]} {languages.find(l => l.code === lang)?.name}</h3>\n            <p>{result}</p>\n            <div className=\"card-buttons\">\n              <button onClick={() => handleCopy(result)}>📋 Copy</button>\n              <button onClick={() => handleSpeak(result, lang)}>🔊 Read</button>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <ToastContainer position=\"bottom-right\" autoClose={3000} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}