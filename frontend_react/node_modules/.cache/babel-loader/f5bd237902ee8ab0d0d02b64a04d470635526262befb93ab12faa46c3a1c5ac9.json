{"ast":null,"code":"var _jsxFileName = \"E:\\\\RESUME_PROJECTS\\\\multilingual_translator_app\\\\frontend_react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst backendURL = \"http://127.0.0.1:8000\"; // Change if different\n\nconst languages = [{\n  code: \"en\",\n  name: \"English\"\n}, {\n  code: \"fr\",\n  name: \"French\"\n}, {\n  code: \"de\",\n  name: \"German\"\n}, {\n  code: \"es\",\n  name: \"Spanish\"\n}, {\n  code: \"hi\",\n  name: \"Hindi\"\n}, {\n  code: \"ar\",\n  name: \"Arabic\"\n}, {\n  code: \"zh\",\n  name: \"Chinese\"\n}, {\n  code: \"cs\",\n  name: \"Czech\"\n}, {\n  code: \"nl\",\n  name: \"Dutch\"\n}, {\n  code: \"el\",\n  name: \"Greek\"\n}, {\n  code: \"fi\",\n  name: \"Finnish\"\n}, {\n  code: \"gu\",\n  name: \"Gujarati\"\n}, {\n  code: \"he\",\n  name: \"Hebrew\"\n}, {\n  code: \"hu\",\n  name: \"Hungarian\"\n}, {\n  code: \"id\",\n  name: \"Indonesian\"\n}, {\n  code: \"it\",\n  name: \"Italian\"\n}, {\n  code: \"ja\",\n  name: \"Japanese\"\n}, {\n  code: \"kn\",\n  name: \"Kannada\"\n}, {\n  code: \"ko\",\n  name: \"Korean\"\n}, {\n  code: \"ml\",\n  name: \"Malayalam\"\n}, {\n  code: \"mr\",\n  name: \"Marathi\"\n}, {\n  code: \"pt\",\n  name: \"Portuguese\"\n}, {\n  code: \"pa\",\n  name: \"Punjabi\"\n}, {\n  code: \"ru\",\n  name: \"Russian\"\n}, {\n  code: \"ta\",\n  name: \"Tamil\"\n}, {\n  code: \"te\",\n  name: \"Telugu\"\n}, {\n  code: \"tr\",\n  name: \"Turkish\"\n}, {\n  code: \"ur\",\n  name: \"Urdu\"\n}];\nfunction App() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [targetLangs, setTargetLangs] = useState([]);\n  const [result, setResult] = useState(null);\n  const [recording, setRecording] = useState(false);\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const handleTextTranslate = async () => {\n    try {\n      const res = await axios.post(`${backendURL}/text-translate`, {\n        text,\n        target_langs: targetLangs,\n        source_lang: \"en\"\n      });\n      setResult(res.data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const startRecording = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true\n    });\n    const mediaRecorder = new MediaRecorder(stream);\n    mediaRecorderRef.current = mediaRecorder;\n    audioChunksRef.current = [];\n    mediaRecorder.ondataavailable = e => {\n      if (e.data.size > 0) {\n        audioChunksRef.current.push(e.data);\n      }\n    };\n    mediaRecorder.onstop = handleVoiceTranslate;\n    mediaRecorder.start();\n    setRecording(true);\n  };\n  const stopRecording = () => {\n    mediaRecorderRef.current.stop();\n    setRecording(false);\n  };\n  const handleVoiceTranslate = async () => {\n    const audioBlob = new Blob(audioChunksRef.current, {\n      type: \"audio/wav\"\n    });\n    const form = new FormData();\n    form.append(\"file\", audioBlob, \"recording.wav\");\n    form.append(\"target_langs\", JSON.stringify(targetLangs));\n    form.append(\"source_lang\", \"en\");\n    try {\n      const res = await axios.post(`${backendURL}/voice-translate`, form, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setResult(res.data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Offline Translator (Text + Voice)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"4\",\n      cols: \"50\",\n      value: text,\n      onChange: e => setText(e.target.value),\n      placeholder: \"Enter text to translate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      multiple: true,\n      value: targetLangs,\n      onChange: e => setTargetLangs(Array.from(e.target.selectedOptions, opt => opt.value)),\n      children: languages.map(lang => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: lang.code,\n        children: lang.name\n      }, lang.code, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTextTranslate,\n      children: \"Translate Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), recording ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopRecording,\n      children: \"Stop Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startRecording,\n      children: \"Start Voice Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Original Text:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: result.originalText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Translations:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.entries(result.translations).map(([lang, trans]) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [lang, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this), \" \", trans]\n        }, lang, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nCM4b9J+crBqFTyY3WBgJ/Tiug8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","axios","jsxDEV","_jsxDEV","backendURL","languages","code","name","App","_s","text","setText","targetLangs","setTargetLangs","result","setResult","recording","setRecording","mediaRecorderRef","audioChunksRef","handleTextTranslate","res","post","target_langs","source_lang","data","err","console","error","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","mediaRecorder","MediaRecorder","current","ondataavailable","e","size","push","onstop","handleVoiceTranslate","start","stopRecording","stop","audioBlob","Blob","type","form","FormData","append","JSON","stringify","headers","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","rows","cols","value","onChange","target","placeholder","multiple","Array","from","selectedOptions","opt","map","lang","onClick","originalText","Object","entries","translations","trans","_c","$RefreshReg$"],"sources":["E:/RESUME_PROJECTS/multilingual_translator_app/frontend_react/src/App.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst backendURL = \"http://127.0.0.1:8000\"; // Change if different\r\n\r\nconst languages = [\r\n  { code: \"en\", name: \"English\" },\r\n  { code: \"fr\", name: \"French\" },\r\n  { code: \"de\", name: \"German\" },\r\n  { code: \"es\", name: \"Spanish\" },\r\n  { code: \"hi\", name: \"Hindi\" },\r\n  { code: \"ar\", name: \"Arabic\" },\r\n  { code: \"zh\", name: \"Chinese\" },\r\n  { code: \"cs\", name: \"Czech\" },\r\n  { code: \"nl\", name: \"Dutch\" },\r\n  { code: \"el\", name: \"Greek\" },\r\n  { code: \"fi\", name: \"Finnish\" },\r\n  { code: \"gu\", name: \"Gujarati\" },\r\n  { code: \"he\", name: \"Hebrew\" },\r\n  { code: \"hu\", name: \"Hungarian\" },\r\n  { code: \"id\", name: \"Indonesian\" },\r\n  { code: \"it\", name: \"Italian\" },\r\n  { code: \"ja\", name: \"Japanese\" },\r\n  { code: \"kn\", name: \"Kannada\" },\r\n  { code: \"ko\", name: \"Korean\" },\r\n  { code: \"ml\", name: \"Malayalam\" },\r\n  { code: \"mr\", name: \"Marathi\" },\r\n  { code: \"pt\", name: \"Portuguese\" },\r\n  { code: \"pa\", name: \"Punjabi\" },\r\n  { code: \"ru\", name: \"Russian\" },\r\n  { code: \"ta\", name: \"Tamil\" },\r\n  { code: \"te\", name: \"Telugu\" },\r\n  { code: \"tr\", name: \"Turkish\" },\r\n  { code: \"ur\", name: \"Urdu\" },\r\n];\r\n\r\nfunction App() {\r\n  const [text, setText] = useState(\"\");\r\n  const [targetLangs, setTargetLangs] = useState([]);\r\n  const [result, setResult] = useState(null);\r\n  const [recording, setRecording] = useState(false);\r\n  const mediaRecorderRef = useRef(null);\r\n  const audioChunksRef = useRef([]);\r\n\r\n  const handleTextTranslate = async () => {\r\n    try {\r\n      const res = await axios.post(`${backendURL}/text-translate`, {\r\n        text,\r\n        target_langs: targetLangs,\r\n        source_lang: \"en\",\r\n      });\r\n      setResult(res.data);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const startRecording = async () => {\r\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n    const mediaRecorder = new MediaRecorder(stream);\r\n    mediaRecorderRef.current = mediaRecorder;\r\n    audioChunksRef.current = [];\r\n\r\n    mediaRecorder.ondataavailable = (e) => {\r\n      if (e.data.size > 0) {\r\n        audioChunksRef.current.push(e.data);\r\n      }\r\n    };\r\n\r\n    mediaRecorder.onstop = handleVoiceTranslate;\r\n\r\n    mediaRecorder.start();\r\n    setRecording(true);\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    mediaRecorderRef.current.stop();\r\n    setRecording(false);\r\n  };\r\n\r\n  const handleVoiceTranslate = async () => {\r\n    const audioBlob = new Blob(audioChunksRef.current, { type: \"audio/wav\" });\r\n    const form = new FormData();\r\n    form.append(\"file\", audioBlob, \"recording.wav\");\r\n    form.append(\"target_langs\", JSON.stringify(targetLangs));\r\n    form.append(\"source_lang\", \"en\");\r\n\r\n    try {\r\n      const res = await axios.post(`${backendURL}/voice-translate`, form, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n      setResult(res.data);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h2>Offline Translator (Text + Voice)</h2>\r\n\r\n      {/* Text Translation */}\r\n      <textarea\r\n        rows=\"4\"\r\n        cols=\"50\"\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n        placeholder=\"Enter text to translate\"\r\n      />\r\n      <br />\r\n      <select\r\n        multiple\r\n        value={targetLangs}\r\n        onChange={(e) =>\r\n          setTargetLangs(Array.from(e.target.selectedOptions, (opt) => opt.value))\r\n        }\r\n      >\r\n        {languages.map((lang) => (\r\n          <option key={lang.code} value={lang.code}>\r\n            {lang.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <br />\r\n      <button onClick={handleTextTranslate}>Translate Text</button>\r\n\r\n      {/* Voice Translation */}\r\n      <br />\r\n      {recording ? (\r\n        <button onClick={stopRecording}>Stop Recording</button>\r\n      ) : (\r\n        <button onClick={startRecording}>Start Voice Recording</button>\r\n      )}\r\n\r\n      {/* Results */}\r\n      {result && (\r\n        <div>\r\n          <h3>Original Text:</h3>\r\n          <p>{result.originalText}</p>\r\n          <h3>Translations:</h3>\r\n          <ul>\r\n            {Object.entries(result.translations).map(([lang, trans]) => (\r\n              <li key={lang}>\r\n                <strong>{lang}:</strong> {trans}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}