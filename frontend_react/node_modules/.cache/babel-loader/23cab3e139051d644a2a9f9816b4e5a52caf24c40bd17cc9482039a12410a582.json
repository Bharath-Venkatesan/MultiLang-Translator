{"ast":null,"code":"var _jsxFileName = \"E:\\\\RESUME_PROJECTS\\\\multilingual_translator_app\\\\frontend_react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// frontend_react/src/App.js\nimport React, { useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport TextField from \"@mui/material/TextField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst languages = [{\n  code: \"ar\",\n  name: \"العربية (Arabic)\"\n}, {\n  code: \"zh\",\n  name: \"中文 (Chinese)\"\n}, {\n  code: \"cs\",\n  name: \"Čeština (Czech)\"\n}, {\n  code: \"nl\",\n  name: \"Nederlands (Dutch)\"\n}, {\n  code: \"en\",\n  name: \"English (English)\"\n}, {\n  code: \"fi\",\n  name: \"Suomi (Finnish)\"\n}, {\n  code: \"fr\",\n  name: \"Français (French)\"\n}, {\n  code: \"de\",\n  name: \"Deutsch (German)\"\n}, {\n  code: \"he\",\n  name: \"עברית (Hebrew)\"\n}, {\n  code: \"hi\",\n  name: \"हिन्दी (Hindi)\"\n}, {\n  code: \"it\",\n  name: \"Italiano (Italian)\"\n}, {\n  code: \"ja\",\n  name: \"日本語 (Japanese)\"\n}, {\n  code: \"ko\",\n  name: \"한국어 (Korean)\"\n}, {\n  code: \"fa\",\n  name: \"فارسی (Persian)\"\n}, {\n  code: \"pl\",\n  name: \"Polski (Polish)\"\n}, {\n  code: \"pt\",\n  name: \"Português (Portuguese)\"\n}, {\n  code: \"ro\",\n  name: \"Română (Romanian)\"\n}, {\n  code: \"ru\",\n  name: \"Русский (Russian)\"\n}, {\n  code: \"sv\",\n  name: \"Svenska (Swedish)\"\n}, {\n  code: \"ta\",\n  name: \"தமிழ் (Tamil)\"\n}, {\n  code: \"tr\",\n  name: \"Türkçe (Turkish)\"\n}, {\n  code: \"uk\",\n  name: \"Українська (Ukrainian)\"\n}, {\n  code: \"vi\",\n  name: \"Tiếng Việt (Vietnamese)\"\n}, {\n  code: \"es\",\n  name: \"Español (Spanish)\"\n}];\nconst languageIcons = {\n  en: \"🇬🇧\",\n  hi: \"🇮🇳\",\n  fr: \"🇫🇷\",\n  es: \"🇪🇸\",\n  de: \"🇩🇪\",\n  ta: \"🇮🇳\",\n  zh: \"🇨🇳\",\n  ar: \"🇸🇦\",\n  ru: \"🇷🇺\",\n  ja: \"🇯🇵\",\n  it: \"🇮🇹\",\n  pt: \"🇵🇹\",\n  pl: \"🇵🇱\",\n  tr: \"🇹🇷\",\n  nl: \"🇳🇱\",\n  sv: \"🇸🇪\",\n  ko: \"🇰🇷\",\n  fa: \"🇮🇷\",\n  fi: \"🇫🇮\",\n  he: \"🇮🇱\",\n  uk: \"🇺🇦\",\n  vi: \"🇻🇳\",\n  cs: \"🇨🇿\",\n  ro: \"🇷🇴\"\n};\nexport default function App() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [targetLangs, setTargetLangs] = useState([]);\n  const [translations, setTranslations] = useState({});\n  const [detectedLang, setDetectedLang] = useState(\"\");\n  const [recording, setRecording] = useState(false);\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const backendURL = \"http://127.0.0.1:8000\"; // Adjust for your backend\n\n  // Handle language selection\n  const handleCheckboxChange = e => {\n    const value = e.target.value;\n    if (e.target.checked) {\n      if (targetLangs.length < 5) {\n        setTargetLangs([...targetLangs, value]);\n      } else {\n        toast.warning(\"You can select a maximum of 5 target languages.\");\n        e.target.checked = false;\n      }\n    } else {\n      setTargetLangs(targetLangs.filter(lang => lang !== value));\n    }\n  };\n\n  // Text-based translation\n  const handleTranslate = async (overrideText = null) => {\n    const textToTranslate = overrideText !== null && overrideText !== void 0 ? overrideText : text;\n    if (!textToTranslate || targetLangs.length === 0) {\n      toast.warning(\"Enter text and select at least one target language.\");\n      return;\n    }\n    try {\n      const res = await axios.post(`${backendURL}/translate`, {\n        text: textToTranslate,\n        target_langs: targetLangs\n      });\n      setTranslations(res.data.translations || {});\n      setDetectedLang(res.data.detectedLang || \"\");\n    } catch (err) {\n      toast.error(\"Text translation failed.\");\n      console.error(err);\n    }\n  };\n\n  // Start recording for voice input\n  const startRecording = async () => {\n    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n      toast.error(\"Microphone not supported\");\n      return;\n    }\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      audioChunksRef.current = [];\n      const mr = new MediaRecorder(stream);\n      mediaRecorderRef.current = mr;\n      mr.ondataavailable = e => {\n        if (e.data && e.data.size > 0) audioChunksRef.current.push(e.data);\n      };\n      mr.onstop = async () => {\n        const audioBlob = new Blob(audioChunksRef.current, {\n          type: \"audio/webm\"\n        });\n        const form = new FormData();\n        form.append(\"file\", audioBlob, \"voice.webm\");\n        targetLangs.forEach(t => form.append(\"target_langs\", t));\n        try {\n          toast.info(\"Processing your voice input...\");\n          const resp = await axios.post(`${backendURL}/voice-translate`, form, {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\"\n            }\n          });\n          if (resp.data.error) {\n            toast.error(\"Server error: \" + resp.data.error);\n            return;\n          }\n          setText(resp.data.originalText || \"\");\n          setTranslations(resp.data.translations || {});\n          setDetectedLang(resp.data.detectedLang || \"\");\n        } catch (err) {\n          toast.error(\"Voice translation failed\");\n          console.error(err);\n        }\n      };\n      mr.start();\n      setRecording(true);\n      toast.info(\"Recording... speak now.\");\n    } catch (err) {\n      toast.error(\"Cannot access microphone: \" + err.message);\n    }\n  };\n\n  // Stop recording\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state !== \"inactive\") {\n      mediaRecorderRef.current.stop();\n      setRecording(false);\n    }\n  };\n  const handleCopy = t => {\n    navigator.clipboard.writeText(t);\n    toast.success(\"Copied!\");\n  };\n  const handleSpeak = (txt, langCode) => {\n    const u = new SpeechSynthesisUtterance(txt);\n    u.lang = langCode || \"en-US\";\n    window.speechSynthesis.speak(u);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83C\\uDF0D Multi-Language Voice & Text Translator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Type text or use voice\",\n      multiline: true,\n      minRows: 4,\n      fullWidth: true,\n      value: text,\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), detectedLang && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Detected language: \", detectedLang]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 12\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleTranslate(),\n        children: \"Translate Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), !recording ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startRecording,\n        style: {\n          marginLeft: 12\n        },\n        children: \"\\uD83C\\uDFA4 Start Voice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopRecording,\n        style: {\n          marginLeft: 12\n        },\n        children: \"\\u23F9 Stop Voice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkbox-list\",\n      style: {\n        marginTop: 12\n      },\n      children: languages.map(lang => /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: \"block\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: lang.code,\n          onChange: handleCheckboxChange,\n          checked: targetLangs.includes(lang.code)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), \" \", languageIcons[lang.code], \" \", lang.name]\n      }, lang.code, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 18\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Translations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), Object.entries(translations).map(([lang, txt]) => {\n        var _languages$find;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: \"1px solid #ddd\",\n            padding: 8,\n            marginBottom: 8\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [languageIcons[lang], \" \", (_languages$find = languages.find(l => l.code === lang)) === null || _languages$find === void 0 ? void 0 : _languages$find.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: txt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCopy(txt),\n            children: \"Copy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSpeak(txt, lang),\n            children: \"Speak\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, lang, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"bottom-right\",\n      autoClose: 3000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Q4qtCLbCkxUjPAj4xxL3NzVwCPQ=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","axios","ToastContainer","toast","TextField","jsxDEV","_jsxDEV","languages","code","name","languageIcons","en","hi","fr","es","de","ta","zh","ar","ru","ja","it","pt","pl","tr","nl","sv","ko","fa","fi","he","uk","vi","cs","ro","App","_s","text","setText","targetLangs","setTargetLangs","translations","setTranslations","detectedLang","setDetectedLang","recording","setRecording","mediaRecorderRef","audioChunksRef","backendURL","handleCheckboxChange","e","value","target","checked","length","warning","filter","lang","handleTranslate","overrideText","textToTranslate","res","post","target_langs","data","err","error","console","startRecording","navigator","mediaDevices","getUserMedia","stream","audio","current","mr","MediaRecorder","ondataavailable","size","push","onstop","audioBlob","Blob","type","form","FormData","append","forEach","t","info","resp","headers","originalText","start","message","stopRecording","state","stop","handleCopy","clipboard","writeText","success","handleSpeak","txt","langCode","u","SpeechSynthesisUtterance","window","speechSynthesis","speak","className","children","fileName","_jsxFileName","lineNumber","columnNumber","label","multiline","minRows","fullWidth","onChange","style","marginTop","onClick","marginLeft","map","display","includes","Object","entries","_languages$find","border","padding","marginBottom","find","l","position","autoClose","_c","$RefreshReg$"],"sources":["E:/RESUME_PROJECTS/multilingual_translator_app/frontend_react/src/App.js"],"sourcesContent":["// frontend_react/src/App.js\r\nimport React, { useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./App.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nconst languages = [\r\n  { code: \"ar\", name: \"العربية (Arabic)\" },\r\n  { code: \"zh\", name: \"中文 (Chinese)\" },\r\n  { code: \"cs\", name: \"Čeština (Czech)\" },\r\n  { code: \"nl\", name: \"Nederlands (Dutch)\" },\r\n  { code: \"en\", name: \"English (English)\" },\r\n  { code: \"fi\", name: \"Suomi (Finnish)\" },\r\n  { code: \"fr\", name: \"Français (French)\" },\r\n  { code: \"de\", name: \"Deutsch (German)\" },\r\n  { code: \"he\", name: \"עברית (Hebrew)\" },\r\n  { code: \"hi\", name: \"हिन्दी (Hindi)\" },\r\n  { code: \"it\", name: \"Italiano (Italian)\" },\r\n  { code: \"ja\", name: \"日本語 (Japanese)\" },\r\n  { code: \"ko\", name: \"한국어 (Korean)\" },\r\n  { code: \"fa\", name: \"فارسی (Persian)\" },\r\n  { code: \"pl\", name: \"Polski (Polish)\" },\r\n  { code: \"pt\", name: \"Português (Portuguese)\" },\r\n  { code: \"ro\", name: \"Română (Romanian)\" },\r\n  { code: \"ru\", name: \"Русский (Russian)\" },\r\n  { code: \"sv\", name: \"Svenska (Swedish)\" },\r\n  { code: \"ta\", name: \"தமிழ் (Tamil)\" },\r\n  { code: \"tr\", name: \"Türkçe (Turkish)\" },\r\n  { code: \"uk\", name: \"Українська (Ukrainian)\" },\r\n  { code: \"vi\", name: \"Tiếng Việt (Vietnamese)\" },\r\n  { code: \"es\", name: \"Español (Spanish)\" }\r\n];\r\n\r\nconst languageIcons = {\r\n  en: \"🇬🇧\", hi: \"🇮🇳\", fr: \"🇫🇷\", es: \"🇪🇸\", de: \"🇩🇪\", ta: \"🇮🇳\", zh: \"🇨🇳\", ar: \"🇸🇦\",\r\n  ru: \"🇷🇺\", ja: \"🇯🇵\", it: \"🇮🇹\", pt: \"🇵🇹\", pl: \"🇵🇱\", tr: \"🇹🇷\", nl: \"🇳🇱\", sv: \"🇸🇪\",\r\n  ko: \"🇰🇷\", fa: \"🇮🇷\", fi: \"🇫🇮\", he: \"🇮🇱\", uk: \"🇺🇦\", vi: \"🇻🇳\", cs: \"🇨🇿\", ro: \"🇷🇴\"\r\n};\r\n\r\nexport default function App() {\r\n  const [text, setText] = useState(\"\");\r\n  const [targetLangs, setTargetLangs] = useState([]);\r\n  const [translations, setTranslations] = useState({});\r\n  const [detectedLang, setDetectedLang] = useState(\"\");\r\n  const [recording, setRecording] = useState(false);\r\n  const mediaRecorderRef = useRef(null);\r\n  const audioChunksRef = useRef([]);\r\n\r\n  const backendURL = \"http://127.0.0.1:8000\"; // Adjust for your backend\r\n\r\n  // Handle language selection\r\n  const handleCheckboxChange = (e) => {\r\n    const value = e.target.value;\r\n    if (e.target.checked) {\r\n      if (targetLangs.length < 5) {\r\n        setTargetLangs([...targetLangs, value]);\r\n      } else {\r\n        toast.warning(\"You can select a maximum of 5 target languages.\");\r\n        e.target.checked = false;\r\n      }\r\n    } else {\r\n      setTargetLangs(targetLangs.filter((lang) => lang !== value));\r\n    }\r\n  };\r\n\r\n  // Text-based translation\r\n  const handleTranslate = async (overrideText = null) => {\r\n    const textToTranslate = overrideText ?? text;\r\n    if (!textToTranslate || targetLangs.length === 0) {\r\n      toast.warning(\"Enter text and select at least one target language.\");\r\n      return;\r\n    }\r\n    try {\r\n      const res = await axios.post(`${backendURL}/translate`, {\r\n        text: textToTranslate,\r\n        target_langs: targetLangs\r\n      });\r\n      setTranslations(res.data.translations || {});\r\n      setDetectedLang(res.data.detectedLang || \"\");\r\n    } catch (err) {\r\n      toast.error(\"Text translation failed.\");\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // Start recording for voice input\r\n  const startRecording = async () => {\r\n    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\r\n      toast.error(\"Microphone not supported\");\r\n      return;\r\n    }\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      audioChunksRef.current = [];\r\n      const mr = new MediaRecorder(stream);\r\n      mediaRecorderRef.current = mr;\r\n\r\n      mr.ondataavailable = (e) => {\r\n        if (e.data && e.data.size > 0) audioChunksRef.current.push(e.data);\r\n      };\r\n\r\n      mr.onstop = async () => {\r\n        const audioBlob = new Blob(audioChunksRef.current, { type: \"audio/webm\" });\r\n        const form = new FormData();\r\n        form.append(\"file\", audioBlob, \"voice.webm\");\r\n        targetLangs.forEach(t => form.append(\"target_langs\", t));\r\n        try {\r\n          toast.info(\"Processing your voice input...\");\r\n          const resp = await axios.post(`${backendURL}/voice-translate`, form, {\r\n            headers: { \"Content-Type\": \"multipart/form-data\" }\r\n          });\r\n          if (resp.data.error) {\r\n            toast.error(\"Server error: \" + resp.data.error);\r\n            return;\r\n          }\r\n          setText(resp.data.originalText || \"\");\r\n          setTranslations(resp.data.translations || {});\r\n          setDetectedLang(resp.data.detectedLang || \"\");\r\n        } catch (err) {\r\n          toast.error(\"Voice translation failed\");\r\n          console.error(err);\r\n        }\r\n      };\r\n\r\n      mr.start();\r\n      setRecording(true);\r\n      toast.info(\"Recording... speak now.\");\r\n    } catch (err) {\r\n      toast.error(\"Cannot access microphone: \" + err.message);\r\n    }\r\n  };\r\n\r\n  // Stop recording\r\n  const stopRecording = () => {\r\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state !== \"inactive\") {\r\n      mediaRecorderRef.current.stop();\r\n      setRecording(false);\r\n    }\r\n  };\r\n\r\n  const handleCopy = (t) => {\r\n    navigator.clipboard.writeText(t);\r\n    toast.success(\"Copied!\");\r\n  };\r\n\r\n  const handleSpeak = (txt, langCode) => {\r\n    const u = new SpeechSynthesisUtterance(txt);\r\n    u.lang = langCode || \"en-US\";\r\n    window.speechSynthesis.speak(u);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>🌍 Multi-Language Voice & Text Translator</h1>\r\n\r\n      <TextField\r\n        label=\"Type text or use voice\"\r\n        multiline\r\n        minRows={4}\r\n        fullWidth\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n      />\r\n\r\n      {detectedLang && <div>Detected language: {detectedLang}</div>}\r\n\r\n      <div style={{ marginTop: 12 }}>\r\n        <button onClick={() => handleTranslate()}>Translate Text</button>\r\n        {!recording ? (\r\n          <button onClick={startRecording} style={{ marginLeft: 12 }}>🎤 Start Voice</button>\r\n        ) : (\r\n          <button onClick={stopRecording} style={{ marginLeft: 12 }}>⏹ Stop Voice</button>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"checkbox-list\" style={{ marginTop: 12 }}>\r\n        {languages.map((lang) => (\r\n          <label key={lang.code} style={{ display: \"block\" }}>\r\n            <input\r\n              type=\"checkbox\"\r\n              value={lang.code}\r\n              onChange={handleCheckboxChange}\r\n              checked={targetLangs.includes(lang.code)}\r\n            />{\" \"}\r\n            {languageIcons[lang.code]} {lang.name}\r\n          </label>\r\n        ))}\r\n      </div>\r\n\r\n      <div style={{ marginTop: 18 }}>\r\n        <h3>Translations</h3>\r\n        {Object.entries(translations).map(([lang, txt]) => (\r\n          <div key={lang} style={{ border: \"1px solid #ddd\", padding: 8, marginBottom: 8 }}>\r\n            <h4>{languageIcons[lang]} {languages.find(l => l.code === lang)?.name}</h4>\r\n            <p>{txt}</p>\r\n            <button onClick={() => handleCopy(txt)}>Copy</button>\r\n            <button onClick={() => handleSpeak(txt, lang)}>Speak</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <ToastContainer position=\"bottom-right\" autoClose={3000} />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}